# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - master
    - staging
    - develop
  pull_request:
    branches:
    - master
    - staging
    - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.5' # The Go version to download (if necessary) and use.

    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    # Run build of the application
    - name: Run build
      run: |
        go mod download
        export VERSION=$(cat VERSION)
        CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-X github.com/diseq/csi-rclone/pkg/rclone.DriverVersion=$(VERSION) -extldflags "-static"' -o _output/csi-rclone-plugin ./cmd/csi-rclone-plugin

    # preserve artifact
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: ./_output/csi-rclone-plugin

  deploy:
    name: Create & push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/download-artifact@v2
        with:
          name: package
          path: ./_output/csi-rclone-plugin

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          registry: quay.io

      - name: Set variables
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - uses: docker/build-push-action@v2
        with:
          context: .
          file: cmd/csi-rclone-plugin/Dockerfile
          push: true
          tags: |
            quay.io/${{github.repository}}:latest
            quay.io/${{github.repository}}:${{ env.VERSION }}
